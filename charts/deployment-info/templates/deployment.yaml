apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deployment-info.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: deployment-info
  template:
    metadata:
      labels:
        app: deployment-info
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: nginx
          image: {{ .Values.nginx.image }}
          imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: result-file
              mountPath: /usr/share/nginx/html/deployment_info
              subPath: deployment_info.txt
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.sidecars }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
          {{- end }}
        - name: script-runner
          image: {{ .Values.scriptRunner.image }}
          imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              apk add --no-cache bash curl bind-tools jq
              
              curl -LO "https://dl.k8s.io/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
              
              chmod +x kubectl
              
              mv kubectl /usr/local/bin/
              
              cp /fetch-deployment-info.sh /tmp/fetch-deployment-info.sh
              
              chmod +x /tmp/fetch-deployment-info.sh
              
              /tmp/fetch-deployment-info.sh
              
              echo "0 2 * * * /tmp/fetch-deployment-info.sh" > /etc/crontabs/root
              
              crond -f
          volumeMounts:
            - name: script-file
              mountPath: /fetch-deployment-info.sh
              subPath: fetch-deployment-info.sh
            - name: result-file
              mountPath: /usr/share/nginx/html/deployment_info
              subPath: deployment_info.txt
      volumes:
        - name: script-file
          configMap:
            name: {{ .Release.Name }}-script-config
        - name: result-file
          emptyDir: {}
