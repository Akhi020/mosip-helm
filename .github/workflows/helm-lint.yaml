name: Lint and Test Charts

on:
  pull_request:
    paths:
      - 'charts/**'

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          # ct needs history to compare
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Install python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      - name: Install yamllint via pip3
        run: |
          pip3 install yamllint

      - name: Set environment variables
        run: |
          # echo "TARGET BRANCH : ${{ github.event.pull_request.base.ref }}"
          echo "TARGET_BRANCH=$(echo ${{ github.base_ref }})" >> $GITHUB_ENV
          echo "COMMIT_ID=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "TARGET_REPO=$( echo ${{ github.event.pull_request.base.repo.html_url }} )" >> $GITHUB_ENV

      - name: Add Target repo to git remotes
        run: | 
          git remote add target_repo $TARGET_REPO
          git fetch target_repo

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          ct list-changed --remote=target_repo --since=HEAD --target-branch=$TARGET_BRANCH --chart-dirs=charts | tee -a list.txt 

      - name: Run chart-testing (lint)
        run: |          
          while read -r chart; do
            echo "CHART: $chart";
            ct lint --config=.github/chart-testing-config.yaml --charts=$chart/ --remote=target_repo;
          done < ./list.txt

      - name: Create yaml files for helm charts
        run: |
          while read -r chart; do
            echo -e "\nCHART: $chart\n";
            
            yaml_file='./chart-template.yaml'
            chart_name=$( echo $chart | awk -F / '{print $2}' );
            mkdir "$chart_name-yaml";
            
            helm template $chart > $yaml_file
            line_nos="$( cat -n $yaml_file | awk '/---/{print $1}' ) $( cat -n $yaml_file| tail -n 1 | awk '{print $1}' )"
            start_of_file=0
            
            for line in $line_nos; do
              if [[ $line -eq 1 ]]; then
                continue;
                start_of_file=$line
              fi
              filename=$( head -n +$(( line-1)) $yaml_file | tail -n $(( line-start_of_file )) | awk -F '/' '/# Source/{print $3}' )
              head -n +$(( line-1 )) $yaml_file | tail -n $(( line-start_of_file )) > "$chart_name-yaml"/$filename
              start_of_file=$line
            done
            
          done < ./list.txt

      - name: Run Health Check Test
        run: |
          while read -r chart; do
            echo -e "\n\nCHART: $chart\n";
            
            chart_name=$( echo $chart | awk -F / '{print $2}' );
            list=$( grep -rinlE "kind:\ Statefulset|kind:\ Deployment" $chart_name-yaml );
            
            echo -e "YAML LIST :";
            echo -e "$list\n"
            
            while read -r yaml; do
              echo -e "YAML : $yaml";
              yamale -s .github/health-check-schema.yaml $yaml  --no-strict
            done <<< $list
          
          done < ./list.txt

      # Commented below tasks as it cannot test MOSIP helm/charts deployment due to dependencies issues
      #- name: Create kind v1.21.1 cluster
      #  uses: helm/kind-action@v1.4.0
      #  with:
      #    node_image: kindest/node:v1.21.1
      #
      #- name: Run chart-testing (install)
      #  run: |
      #    while read -r chart; do
      #      echo -e "\nCHART: $chart\n";
      #      ct install --config=.github/chart-testing-config.yaml --charts=$chart --remote=target_repo --target-branch=$TARGET_BRANCH;
      #    done < ./list.txt
